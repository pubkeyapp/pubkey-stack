import { Group, Pagination, SimpleGrid } from '@mantine/core'
import { <%= model.className %> } from '@<%= npmScope %>/sdk'
import { gridLimits, UiPageLimit } from '@<%= npmScope %>/<%= app.fileName %>-core-ui'
import { UiDebugModal, UiGroup, UiStack } from '@pubkey-ui/core'
import { DataTableProps } from 'mantine-datatable'
import { <%= model.className %>UiGridItem } from './<%= model.fileName %>-ui-grid-item'

export function <%= model.className %>UiGrid({
  <%= plural.propertyName %> = [],
  onPageChange,
  page,
  totalRecords,
  limit,
  setLimit,
  setPage,
}: {
  <%= plural.propertyName %>: <%= model.className %>[]
  page: DataTableProps['page']
  totalRecords: number
  onPageChange: (page: number) => void
  limit: number
  setLimit: (limit: number) => void
  setPage: (page: number) => void
}) {
  const totalPages = totalRecords / limit + 1
  return (
    <UiStack>
      <SimpleGrid cols={{ base: 1, sm: 2, md: 3 }} spacing="md">
        {<%= plural.propertyName %>.map((<%= model.propertyName %>) => (
          <<%= model.className %>UiGridItem key={<%= model.propertyName %>.id} to={<%= model.propertyName %>.id} <%= model.propertyName %>={<%= model.propertyName %>} />
        ))}
      </SimpleGrid>
      <UiGroup>
        <Pagination disabled={totalPages < 2} total={totalPages} value={page} onChange={onPageChange} />
        <Group>
          <UiDebugModal data={<%= plural.propertyName %>} />
          <UiPageLimit data={gridLimits} limit={limit} setLimit={setLimit} setPage={setPage} />
        </Group>
      </UiGroup>
    </UiStack>
  )
}
